public class Transmit implements Encrypt {
	private int[] key = { 0x00000000, 0x00000000, 0x00000000, 0x00000000 };
	private int[] plainText = { 0x55555555, 0x55555555, 0x55555555, 0x55555555 };
	private int[] cipherText = { 0x55555555, 0x55555555, 0x55555555, 0x55555555 };

	public Transmit() {

	}

	@Override
	public int[] Encrypt() {
		// TODO Auto-generated method stub
		return cipherText;
	}

	public int[][] allSboxToMDS(int val) {
		int A, B, C, D;
		A = q0(val);
		B = q1(val);
		C = q0(val);
		D = q1(val);

		int endResult = (A << 24) | (B << 16) | (C << 8) | D;
		int S0 = 0x17A019B9;
		int S1 = 0x03A45B78;
		int testResult = endResult ^ S0;

		int A2, B2, C2, D2;

		A2 = q0(testResult);
		B2 = q1(testResult);
		C2 = q0(testResult);
		D2 = q1(testResult);

		int endResult2 = (A2 << 24) | (B2 << 16) | (C2 << 8) | D2;
		int testResult2 = endResult ^ S1;

		int A3, B3, C3, D3;

		A3 = q0(testResult2);
		B3 = q1(testResult2);
		C3 = q0(testResult2);
		D3 = q1(testResult2);

		return null;
	}

	public static int q0(int val) {
		int A = (val & 0xF0) >> 4;
		int B = val & 0x0F;

		int[] t0 = { 0x8, 0x1, 0x7, 0xA, 0x6, 0xF, 0x3, 0x2, 0x0, 0xB, 0x5,
				0x9, 0xE, 0xC, 0xA, 0x4 };
		int[] t1 = { 0xE, 0xC, 0xB, 0x8, 0x1, 0x2, 0x3, 0x5, 0xF, 0x4, 0xA,
				0x6, 0x7, 0x0, 0x9, 0xD };
		int[] t2 = { 0xB, 0xA, 0x5, 0xE, 0x6, 0xD, 0x9, 0x0, 0xC, 0x8, 0xF,
				0x3, 0x2, 0x4, 0x7, 0x1 };
		int[] t3 = { 0xD, 0x7, 0xF, 0x4, 0x1, 0x2, 0x6, 0xE, 0x9, 0xB, 0x3,
				0x0, 0x8, 0x5, 0xC, 0xA };

		int A2 = A ^ B;
		A2 = t0[A2];
		int B2 = qFunction(A, B);
		B2 = t1[B2];
		int A3 = A2 ^ B2;
		A3 = t2[A3];
		int B3 = qFunction(A2, B2);
		B3 = t3[B3];
		int endResult = (A3 << 4) | B3;

		return endResult;

	}

	public static int q1(int val) {
		int A = (val & 0xF0) >> 4;
		int B = val & 0x0F;

		int[] t0 = { 0x2, 0x8, 0xB, 0xD, 0xF, 0x7, 0x6, 0xE, 0x3, 0x1, 0x9,
				0x4, 0x0, 0xA, 0xC, 0x5 };
		int[] t1 = { 0x1, 0xE, 0x2, 0xB, 0x4, 0xC, 0x3, 0x7, 0x6, 0xD, 0xA,
				0x5, 0xF, 0x9, 0x0, 0x8 };
		int[] t2 = { 0x4, 0xC, 0x7, 0x5, 0x1, 0x6, 0x9, 0xA, 0x0, 0xE, 0xD,
				0x8, 0x2, 0xB, 0x3, 0xF };
		int[] t3 = { 0xB, 0x9, 0x5, 0x1, 0xC, 0x3, 0xD, 0xE, 0x6, 0x4, 0x7,
				0xF, 0x2, 0x0, 0x8, 0xA };

		int A2 = A ^ B;
		A2 = t0[A2];
		int B2 = qFunction(A, B);
		B2 = t1[B2];
		int A3 = A2 ^ B2;
		A3 = t2[A3];
		int B3 = qFunction(A2, B2);
		B3 = t3[B3];
		int endResult = (A3 & 0xE0) | (B3 & 0x1F);

		return endResult;

	}

	public static int qFunction(int A, int B) {
		int Btest = B >> 1;
		int Btest2 = Btest ^ A;
		int Aa = A;
		if (Aa % 2 == 0)
			Aa = 8;
		else
			Aa = 0;
		int B2 = Aa ^ Btest2;
		return B2;

	}
}
